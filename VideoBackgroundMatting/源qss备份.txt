

//centurl widgets qss
QMainWindow
{
	background-color:rgb(255,255,255)
}

QPushButton\
{
	border-radius:10px;
	/*color: rgb(255, 255, 255);*/
	background-color: rgb(255, 255, 255);
	border:2px solid rgb(0,0,0);
	outline: none;
}
QPushButton:pressed
{
	background-color: rgb(204, 204, 215);
}
QPushButton:disabled
{
	background-color: rgb(167, 164, 170);
}
QSlider::handle:vertical
{
	color:black;
}


//滑动条
QSlider::add-page:Horizontal
{     
    background-color: rgb(223, 223, 223);
    height:4px;
}
//划过部分
QSlider::sub-page:Horizontal 
{
    background-color:rgb(196, 196, 196);
    height:4px;
}
QSlider::groove:Horizontal 
{
    background:transparent;
    height:10px;
    border-radius: 5px;
}
QSlider::handle:Horizontal 
{
    height: 20px;
    width:20px;
    border-image: url(:/adjust/icon/adjustColor/horizionBar.png);
    margin: -2 0px;
}






















void MainWindow::dockSetting()
{

	//记录所有的dock指针
	m_docks.append(ui->dockWidget_1);
	m_docks.append(ui->dockWidget_2);
	m_docks.append(ui->dockWidget_3);
	m_docks.append(ui->dockWidget_4);

	removeAllDock();
	addDockWidget(Qt::LeftDockWidgetArea, ui->dockWidget_1);
	splitDockWidget(ui->dockWidget_1, ui->dockWidget_4, Qt::Horizontal);
	splitDockWidget(ui->dockWidget_1, ui->dockWidget_2, Qt::Vertical);
	splitDockWidget(ui->dockWidget_2, ui->dockWidget_3, Qt::Vertical);
	showDock(QList<int>() << 0 << 1 << 2 << 3);

}

void MainWindow::removeAllDock()
{
	for (int i = 0; i < 3; ++i)
	{
		removeDockWidget(m_docks[i]);
	}
}

void MainWindow::showDock(const QList<int>& index)
{
	if (index.isEmpty())
	{
		for (int i = 0; i < 3; ++i)
		{
			m_docks[i]->show();
		}
	}
	else
	{
		foreach(int i, index) {
			m_docks[i]->show();
		}
	}
}



构造函数

	QWidget* p = takeCentralWidget();
	if (p)
		delete p;
	setDockNestingEnabled(true);
	dockSetting();



	/*Lable                                                                             Lable*/
QLabel 
{
    font-family: Microsoft YaHei;
    font-size: 14px;
    color: rgb(160, 160, 160);
    background-color:rgb(29, 30, 31);
}
